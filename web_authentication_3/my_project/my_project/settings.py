"""
Django settings for my_project project.

Generated by 'django-admin startproject' using Django 4.2.10.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
print(BASE_DIR)
print(__file__)
##__file__ is a python variabel represent current script path means setting.py
##parent.parent means it will go two ways up means it will go base directory path


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=f!e9kvo)kucu(pq47e&(xgfp4^3!a86kqtpslu#jyfgt1z5ff'
##uses to encrypt decrpyt sensitive data like password

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
## we can see any errors when runtime

ALLOWED_HOSTS = []
##we can specify the domain where our project will be available
##but in dev mode we can access with localhost mode


# Application definition
## all these apps codes present in django package itself
INSTALLED_APPS = [
    'django.contrib.admin',  ##administraion interface
    'django.contrib.auth',   ##authentication functionalities
    'django.contrib.contenttypes', ##content type functionality,
    'django.contrib.sessions',     ##session management functionality
    'django.contrib.messages',     ##displaying messages to users
    'django.contrib.staticfiles',  ##This application manages static files (e.g., CSS, JavaScript, images) for the project.
    'my_app'
]

##software that is used to communication between diff applications https://aws.amazon.com/what-is/middleware/
##Without middleware, developers would have to build a data exchange module for each software component that connects to the application
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  ##3allowing to access current user info in views 
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

##url configuration
ROOT_URLCONF = 'my_project.urls'

##djnago template language is language used to define structure and presentation of html in django.
#django template engines uses to processing and rendering djnago templtes into html responese for web pages
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates', ## it can use django template engine
        'DIRS': [BASE_DIR,'templates'], ##where the engine should look for
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'my_project.wsgi.application'
##interface between web server and python web_framework allowing to serve http request and responses

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

##related to database
DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'my_project',
        'USER': 'postgres',
        'PASSWORD':'Vinitha@12',
        'HOST':'localhost'
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/
##translation of language time depends on country

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
